[tox]
minversion = 3.1
envlist = pep8
skipsdist = True
ignore_basepython_conflict = True

[testenv]
skip_install = True
basepython = python3
passenv = 
    OS_*
    pip: PIP_INSTALL
setenv =
    VIRTUAL_ENV={envdir}
    LANG=en_US.UTF-8
    LANGUAGE=en_US:en
    LC_ALL=C
    OS_LOG_CAPTURE={env:OS_LOG_CAPTURE:true}
    OS_STDOUT_CAPTURE={env:OS_STDOUT_CAPTURE:true}
    OS_STDERR_CAPTURE={env:OS_STDERR_CAPTURE:true}
    pip: PIP_INSTALL={env:PIP_INSTALL:true}
deps =
    -r{toxinidir}/test-requirements.txt
    pip: {toxinidir}

commands = stestr run {posargs}
           stestr slowest

[testenv:docs]
deps =
    antsibull
    ansible
    sphinx
setenv =
    ANSIBLE_COLLECTIONS_PATH={toxinidir}/docs/collections
whitelist_externals = 
    python3
    git
    mv
    chmod
    mkdir
    rm
    tar
    touch
commands = 
    rm -rf {toxinidir}/docs/source/otcdocstheme
    rm -rf {toxinidir}/docs/build/
    rm -rf {toxinidir}/docs/collections/
    rm -rf {toxinidir}/docs/html.tar.bz2
    rm -rf {toxinidir}/docs/source/modules
    rm -rf {toxinidir}/docs/source/modules2
    mkdir {toxinidir}/docs/build/
    git clone https://github.com/opentelekomcloud/otcdocstheme.git {toxinidir}/docs/source/otcdocstheme
    mkdir {toxinidir}/docs/collections
    mkdir {toxinidir}/docs/collections/ansible_collections
    mkdir {toxinidir}/docs/collections/ansible_collections/opentelekomcloud
    mkdir {toxinidir}/docs/collections/ansible_collections/opentelekomcloud/cloud
    git clone https://github.com/SebastianGode/ansible-collection-cloud.git {toxinidir}/docs/collections/ansible_collections/opentelekomcloud/cloud
    mv {toxinidir}/docs/collections/ansible_collections/opentelekomcloud/cloud/galaxy.yml.in {toxinidir}/docs/collections/ansible_collections/opentelekomcloud/cloud/galaxy.yml
    mkdir {toxinidir}/docs/source/modules
    mkdir {toxinidir}/docs/source/modules2
    chmod 700 {toxinidir}/docs/source/modules
    antsibull-docs collection --use-current --squash-hierarchy --dest-dir {toxinidir}/docs/source/modules/ opentelekomcloud.cloud
    python3 {toxinidir}/docs/source/removemodulename.py
    sphinx-build docs/source docs/build 
    rm -rf {toxinidir}/docs/source/otcdocstheme
    rm -rf {toxinidir}/docs/source/modules
    rm -rf {toxinidir}/docs/collections/
    rm -rf {toxinidir}/docs/source/modules2
    touch {toxinidir}/docs/build/.nojekyll
    tar -cjf docs/html.tar.bz2 -C docs/build/ .

[testenv:pep8]
commands =
    flake8

[testenv:yamllint]
commands =
    yamllint 

[testenv:build]
deps =
    pbr
    ruamel.yaml
    ansible-base

commands =
    python {toxinidir}/tools/build.py
    ansible --version
    ansible-galaxy collection build --force {toxinidir} --output-path {toxinidir}/build_artifact

[testenv:linters]
passenv = *
deps =
    {[testenv]deps}
commands =
    {[testenv:build]commands}
    {[testenv:pep8]commands}
#    {[testenv:yamllint]commands}
    ansible --version

[testenv:linters-29]
passenv = {[testenv:linters]passenv}
commands = {[testenv:linters]commands}
deps =
    -r{toxinidir}/test-requirements-2.9.txt

[testenv:sanity]
passenv = *
commands =
    python {toxinidir}/tools/build.py
    {toxinidir}/tests/utils/sanity.sh opentelekomcloud cloud

[testenv:units]
passenv = *
commands =
    python {toxinidir}/tools/build.py
    {toxinidir}/tests/utils/units.sh opentelekomcloud cloud

[testenv:functional]
passenv = *
commands =
  {toxinidir}/tests/utils/integration.sh opentelekomcloud cloud
[testenv:venv]
deps =
    -r{toxinidir}/test-requirements.txt
commands = {posargs}

[flake8]
# W503 Is supposed to be off by default but in the latest pycodestyle isn't.
#      Also, both openstacksdk and Donald Knuth disagree with the rule. Line
#      breaks should occur before the binary operator for readability.
# H4 are rules for docstrings. Maybe we should clean them?
# E501,E402,H301 are ignored so we can import the existing
#      modules unchanged and then clean them in subsequent patches.
ignore = W503,H4,E501,E402,H301
show-source = True
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build,ansible_collections

[testenv:ansible]
# Need to pass some env vars for the Ansible playbooks
passenv = HOME USER ANSIBLE_*
deps =
    {[testenv]deps}
commands =
    /bin/bash {toxinidir}/ci/run-ansible-tests-collection.sh -e {envdir} {posargs}

# PIP job runs with Ansible-2.9
[testenv:ansible-pip]
deps =
    -r{toxinidir}/test-requirements-2.9.txt
    {toxinidir}
passenv = {[testenv:ansible]passenv}
commands = {[testenv:ansible]commands}

[testenv:ansible-2.9]
deps =
    -r{toxinidir}/test-requirements-2.9.txt
passenv = {[testenv:ansible]passenv}
commands = {[testenv:ansible]commands}

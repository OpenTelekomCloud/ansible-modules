---
- name: SWR domain tests
  module_defaults:
    opentelekomcloud.cloud.swr_domain:
      cloud: "{{ test_cloud }}"
  block:
    - name: Set random prefix
      ansible.builtin.set_fact:
        prefix: "{{ 99999999 | random | to_uuid | hash('md5') }}"

    - name: Set initial facts
      ansible.builtin.set_fact:
        organization_name: "{{ ( 'org_' + prefix) }}"
        repository_name: "{{ ( 'repo_' + prefix) }}"

    - name: Create organization
      opentelekomcloud.cloud.swr_organization:
        namespace: "{{ organization_name }}"
      register: organization

    - name: Assert result
      ansible.builtin.assert:
        that:
          - organization is success

    - name: Create repository in this organization
      opentelekomcloud.cloud.swr_repository:
        namespace: "{{ organization_name }}"
        repository: "{{ repository_name }}"
      register: repository

    - name: Assert result
      ansible.builtin.assert:
        that:
          - repository is success

    - name: Create domain in this repository
      opentelekomcloud.cloud.swr_domain:
        namespace: "{{ organization_name }}"
        repository: "{{ repository_name }}"
        access_domain: "{{ domain_name }}"
        description: "some"
      register: domain

    - name: Assert result
      ansible.builtin.assert:
        that:
          - domain is success
          - domain is changed

    - name: Update domain in this repository
      opentelekomcloud.cloud.swr_domain:
        namespace: "{{ organization_name }}"
        repository: "{{ repository_name }}"
        access_domain: "{{ domain_name }}"
        description: "Some description"
      register: domain

    - name: Assert result
      ansible.builtin.assert:
        that:
          - domain is success
          - domain is changed

  always:
    - name: Delete domain in this repository
      opentelekomcloud.cloud.swr_domain:
        namespace: "{{ organization_name }}"
        repository: "{{ repository_name }}"
        access_domain: "{{ domain_name }}"
        state: absent
      register: domain

    - name: Assert result
      ansible.builtin.assert:
        that:
          - domain is success
          - domain is changed

    - name: Delete this repository
      opentelekomcloud.cloud.swr_repository:
        namespace: "{{ organization_name }}"
        repository: "{{ repository_name }}"
        state: absent
      register: repository

    - name: Assert result
      ansible.builtin.assert:
        that:
          - repository is success
          - repository is changed

    - name: Delete organization
      opentelekomcloud.cloud.swr_organization:
        namespace: "{{ organization_name }}"
        state: absent
      register: organization

    - name: Assert result
      ansible.builtin.assert:
        that:
          - organization is success

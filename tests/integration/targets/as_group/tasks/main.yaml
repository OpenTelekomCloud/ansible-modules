---
- module_defaults:
    opentelekomcloud.cloud.as_group:
      cloud: "{{ test_cloud }}"
  block:
    - name: Set random prefix
      set_fact:
        prefix: "{{ 99999999 | random | to_uuid | hash('md5') }}"

    - name: Set initial facts
      set_fact:
        as_group_name: "{{ ( prefix + '_as_group') }}"
        new_name: "{{ ( prefix + 'new_name') }}"
        key_name: "{{ ( prefix + '_key') }}"
        network_name: "{{ ( prefix + '_network') }}"
        subnet_name: "{{ ( prefix + '_subnet') }}"
        router_name:  "{{ ( prefix + '_router') }}"

    - name: Create keypair
      openstack.cloud.os_keypair:
          name: "{{ key_name }}"

    - name: Create network
      openstack.cloud.os_network:
        name: "{{ network_name }}"
        state: present
      register: network

    - name: Create subnet
      openstack.cloud.os_subnet:
        name: "{{ subnet_name }}"
        state: present
        network_name: "{{ network.network.name }}"
        cidr: "192.168.110.0/24"
        dns_nameservers: "{{ ['100.125.4.25', '8.8.8.8'] }}"
      register: subnet

    - name: Create router
      openstack.cloud.os_router:
        name: "{{ router_name }}"
        state: present
        network: admin_external_net
        enable_snat: True
        interfaces:
          - net: "{{ network.network.name }}"
            subnet: "{{ subnet.subnet.name }}"
      register: router

    - name: Create as group - check_mode
      opentelekomcloud.cloud.as_group:
        scaling_group_name: "{{ as_group_name }}"
        networks: [{'id': "{{ network.network.id }}"}]
        router: "{{ router.router.id }}"
      check_mode: yes
      register: as_group_check

    - name: assert result
      assert:
        that:
          - as_group_check is changed
          -
    - name: Create as group
      opentelekomcloud.cloud.as_group:
        scaling_group_name: "{{ as_group_name }}"
        networks: [{'id': "{{ network.network.id }}"}]
        router: "{{ router.router.id }}"
      register: as_group

    - name: assert result
      assert:
        that:
          - as_group is success
          - as_group is changed

    - name: Update as group
      opentelekomcloud.cloud.as_group:
        scaling_group_id: "{{ as_group.as_group.id }}"
        scaling_group_name: "{{ new_name }}"
        max_instance_number: 10
      register: as_group

    - name: assert result
      assert:
        that:
          - as_group is success
          - as_group is changed

  always:
    - block:
      # Cleanup
      - name: Delete as group
        opentelekomcloud.cloud.as_group:
          scaling_group_name: "{{ new_name }}"
          state: absent
        register: dropped_as_group

      - name: assert result
        assert:
          that:
            - dropped_as_group is success
            - dropped_as_group is changed

      - name: Delete keypair
        openstack.cloud.os_keypair:
            name: "{{ key_name }}"
            state: absent

      - name: Drop existing router
        openstack.cloud.os_router:
          name: "{{ router.router.name }}"
          state: absent

      - name: Drop existing subnet
        openstack.cloud.os_subnet:
          name: "{{ subnet.subnet.name }}"
          state: absent

      - name: Drop existing network
        openstack.cloud.os_network:
          name: "{{ network.network.name }}"
          state: absent
      ignore_errors: true
